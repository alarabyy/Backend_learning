// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ports_and_ships.Models;

#nullable disable

namespace Ports_and_ships.Migrations
{
    [DbContext(typeof(Datacontext))]
    [Migration("20240926173624_shipsdb-mg")]
    partial class shipsdbmg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ports_and_ships.Models.Client", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.HasIndex("OrderId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Ports_and_ships.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("img")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<double>("size")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Ports_and_ships.Models.Ship", b =>
                {
                    b.Property<int>("ShipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.HasKey("ShipId");

                    b.HasIndex("OrderId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("Ports_and_ships.Models.Client", b =>
                {
                    b.HasOne("Ports_and_ships.Models.Order", null)
                        .WithMany("clients")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Ports_and_ships.Models.Ship", b =>
                {
                    b.HasOne("Ports_and_ships.Models.Order", null)
                        .WithMany("shipS")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Ports_and_ships.Models.Order", b =>
                {
                    b.Navigation("clients");

                    b.Navigation("shipS");
                });
#pragma warning restore 612, 618
        }
    }
}
